#!/bin/bash
#==========================================#
#                 poshd                    #
#  https://github.com/ponyofshadows/poshd  #
#==========================================#
set -e
PO_PATH="$HOME/tmp/test/all"

# ----------------
## Strategies for parsing parameters
# 
# - Adjacent non-option parameters will be concatenated into one object
# |__ objects starting with "-e" or without preceding options -> (event, title, date, path)
# |__ objects starting with "-p" -> (project, title, action, path)
# |__ objects starting with "-f" -> (file, path)
# |__ objects starting with "-d" -> (disk, status)
# |__ objects starting with "-l" -> (keyword, content, date_from, date_to)
# - objects call specfic functions
# |__ event -> update_event()
# |__ project -> update_project()
# |__ disk -> update_disk()
# |__ event & project -> link()
#
# - some options call specfic functions
# |__ "-init" --> init()
# |__ "-l" --> list()
# |__ "-b" --> backup()
# |__ "-r" --> recover()
# |__ "-rm" --> rm_event()
# ----------------
if [ "$#" == 0 ]; then
  # option "po -l"
  echo "list"
else
  for arg in "$@"
  do
    if [[ ! $arg == -* ]]; then
      # connect words into sentences
      echo "content"
    else  
      # options
      if [[ $arg == -e* ]]; then
        echo "event"
      elif [[ $arg == -p* ]]; then
        echo "project"
      elif [[ $arg == -f* ]]; then
        echo "file"
      elif [[ $arg == -d* ]]; then
        echo "disk"
      elif [[ $arg == -l* ]]; then
        echo "keywords"
      elif [[ $arg == -rm* ]]; then
        echo "rm_event"
      elif [[ $arg == -b* ]]; then
        echo "backup"
      elif [[ $arg == -r* ]]; then
        echo "recover"
      elif [[ $arg == -init* ]]; then
        echo "init"
      fi
    fi
  done
fi
